// <auto-generated />
using System;
using LeerPlatform_Team2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LeerPlatform_Team2.Migrations
{
    [DbContext(typeof(GIPContext))]
    [Migration("20200404080725_InitialSetup")]
    partial class InitialSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LeerPlatform_Team2.TblFunctionaliteiten", b =>
                {
                    b.Property<int>("FunctionaliteitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FunctionaliteitID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Beschrijving")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("FunctionaliteitId");

                    b.ToTable("TblFunctionaliteiten");
                });

            modelBuilder.Entity("LeerPlatform_Team2.TblLessen", b =>
                {
                    b.Property<string>("Lescode")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("Studiepunten")
                        .HasColumnType("int");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Lescode");

                    b.ToTable("TblLessen");
                });

            modelBuilder.Entity("LeerPlatform_Team2.TblLessenreeks", b =>
                {
                    b.Property<string>("Reekscode")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int?>("Ingeschreven")
                        .HasColumnType("int");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("Reekscode");

                    b.ToTable("TblLessenreeks");
                });

            modelBuilder.Entity("LeerPlatform_Team2.TblLokalen", b =>
                {
                    b.Property<string>("Lokaalnummer")
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int>("Capaciteit")
                        .HasColumnType("int");

                    b.Property<int?>("FunctionaliteitenId")
                        .HasColumnName("FunctionaliteitenID")
                        .HasColumnType("int");

                    b.Property<string>("Locatie")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Lokaalnummer");

                    b.HasIndex("FunctionaliteitenId");

                    b.ToTable("TblLokalen");
                });

            modelBuilder.Entity("LeerPlatform_Team2.TblPlanning", b =>
                {
                    b.Property<int>("PlanningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PlanningID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EindTijdstip")
                        .HasColumnName("Eind tijdstip")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ExtraInfo")
                        .HasColumnName("Extra info")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Lescode")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Lokaalnummer")
                        .IsRequired()
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("Reekscode")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<DateTime>("StartTijdstip")
                        .HasColumnName("Start tijdstip")
                        .HasColumnType("smalldatetime");

                    b.HasKey("PlanningId");

                    b.HasIndex("Lescode");

                    b.HasIndex("Lokaalnummer");

                    b.HasIndex("Reekscode");

                    b.ToTable("TblPlanning");
                });

            modelBuilder.Entity("LeerPlatform_Team2.TblLokalen", b =>
                {
                    b.HasOne("LeerPlatform_Team2.TblFunctionaliteiten", "Functionaliteiten")
                        .WithMany("TblLokalen")
                        .HasForeignKey("FunctionaliteitenId")
                        .HasConstraintName("FK_TblFunctionaliteiten_TblLokalen");
                });

            modelBuilder.Entity("LeerPlatform_Team2.TblPlanning", b =>
                {
                    b.HasOne("LeerPlatform_Team2.TblLessen", "LescodeNavigation")
                        .WithMany("TblPlanning")
                        .HasForeignKey("Lescode")
                        .HasConstraintName("FK_TblLessen_TblPlanning")
                        .IsRequired();

                    b.HasOne("LeerPlatform_Team2.TblLokalen", "LokaalnummerNavigation")
                        .WithMany("TblPlanning")
                        .HasForeignKey("Lokaalnummer")
                        .HasConstraintName("FK_TblLokalen_TblPlanning")
                        .IsRequired();

                    b.HasOne("LeerPlatform_Team2.TblLessenreeks", "ReekscodeNavigation")
                        .WithMany("TblPlanning")
                        .HasForeignKey("Reekscode")
                        .HasConstraintName("FK_TblLessenreeks_TblPlanning")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
